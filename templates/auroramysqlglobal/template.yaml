AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Service Broker - Global Amazon Aurora MySQL 5.6, 5.7 (qs-1pn9kr5a8)'

###############################################################################
# MetaData - ServiceBroker
###############################################################################
Metadata:
  AWS::ServiceBroker::Specification:
    Version: 1.5
    Tags:
    - AWS
    - Aurora
    - MySQL
    - database
    Name: auroramysqlglobal
    DisplayName: Global Amazon Aurora MySQL
    LongDescription: Amazon Aurora is a relational database service that combines the speed and
      availability of high-end commercial databases with the simplicity and cost-effectiveness of
      open source databases. The MySQL-compatible edition of Aurora delivers up to 5X the throughput
      of standard MySQL running on the same hardware, and enables existing MySQL applications and
      tools to run without requiring modification.
    ImageUrl: https://s3.amazonaws.com/awsservicebroker/icons/AmazonAurora_LARGE.png
    DocumentationUrl: https://aws.amazon.com/rds/aurora/
    ProviderDisplayName: Amazon Web Services
    UpdatableParameters:
      - AccessCidr
      - AdminRole
      - ArchPathTag
      - AutoMinorVersionUpgrade
      - CostCenterTag
      - DataClassificationTag
      - DBEngineVersion
      - DBInstanceClass
      - EnvironmentTag
      - GlobalPrimaryRegion
      - InboundSGName
      - LambdaUpdate
      - OwnerTag
      - Mode
      - NumberofAuroraReplicas
      - PCIDataTag
      - PreferredMaintenanceWindowDay
      - PreferredMaintenanceWindowEndTime
      - PreferredMaintenanceWindowStartTime
      - ReadRole
      - SchemaRole
      - ServiceRole
    ServicePlans:
      production:
        DisplayName: Production
        Description: Configuration designed for production deployments
        LongDescription: Creates an Amazon Aurora MySQL database optimised for
          production use
        Cost: https://aws.amazon.com/rds/aurora/pricing/
        ParameterValues:
          AutoMinorVersionUpgrade: 'false'
          BackupRetentionPeriod: 35
          DBPassword: Auto
          DBPort: 3306
          DBUsername: master
          MonitoringInterval: '1'
          StorageEncrypted: 'true'
          SkipFinalSnapshotOnDeletion: 'true'
      dev:
        DisplayName: Development
        Description: Configuration designed for development and testing deployments
        LongDescription: Creates an Amazon Aurora MySQL database optimised for
          dev/test use
        Cost: https://aws.amazon.com/rds/aurora/pricing/
        ParameterValues:
          AutoMinorVersionUpgrade: 'true'
          AvailabilityZones: Auto
          BackupRetentionPeriod: 2
          DBPassword: Auto
          DBPort: 3306
          DBUsername: master
          MonitoringInterval: '60'
          NumberofAuroraReplicas: '0'
          StorageEncrypted: 'true'
          SkipFinalSnapshotOnDeletion: 'true'
      custom:
        DisplayName: Custom
        Description: Custom Configuration for Advanced deployments
        LongDescription: Creates an Amazon Aurora MySQL database with custom
          configuration
        Cost: https://aws.amazon.com/rds/aurora/pricing/
        ParameterValues: {}


###############################################################################
# Parameter groups
###############################################################################
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Network and Security
        Parameters:
          - PubliclyAccessible
          - VpcName
          - AccessCidr
          - InboundSGName
          - SubnetName
      -
        Label:
          default: Database User Access
        Parameters:
          - AdminRole
          - ReadRole
          - SchemaRole
          - ServiceRole
      -
        Label:
          default: Database Instance Specification
        Parameters:
          - DBInstanceClass
      -
        Label:
          default: Database Replication
        Parameters:
          - NumberofAuroraReplicas
          - GlobalClusterIdentifier
          - GlobalPrimaryRegion
          - Mode
      -
        Label:
          default: Database Specification
        Parameters:
          - DBEngineVersion
          - DBEngineMode
          - DBName
          - DBPort
          - DBUsername
          - DBPassword
      -
        Label:
          default: Database Parameters
        Parameters:
          - AutoMinorVersionUpgrade
          - MonitoringInterval
          - BackupRetentionPeriod
          - StorageEncrypted
          - DeletionProtection
          - RDSTimeZone
          - DBClusterIdentifier
          - SkipFinalSnapshotOnDeletion
      -
        Label:
          default: Severless Specification (only applicable if Engine Version is 'MySQL 5.6-compatible' and Engine Mode is 'Serverless')
        Parameters:
          - ServerlessMinCapacityUnit
          - ServerlessMaxCapacityUnit
          - ServerlessAutoPause
          - ServerlessSecondsUntilAutoPause
      -
        Label:
          default: Maintainance Parameters
        Parameters:
          - PreferredMaintenanceWindowDay
          - PreferredMaintenanceWindowStartTime
          - PreferredMaintenanceWindowEndTime
      -
        Label:
          default: Adobe Tags
        Parameters:
          - ArchPathTag
          - EnvironmentTag
          - OwnerTag
          - CostCenterTag
          - DataClassificationTag
          - PCIDataTag
      -
        Label:
          default: Lambda
        Parameters:
          - LambdaUpdate

    ParameterLabels:
      DBUsername:
        default: Master Username
      DBPassword:
        default: Master User Password
      DBPort:
        default: Port Number
      DBInstanceClass:
        default: DB Instance Class
      DBEngineVersion:
       default: Engine Version
      DBEngineMode:
        default: Engine Mode
      PubliclyAccessible:
        default: Publicly Accessible
      AccessCidr:
        default: Access CIDR
      DBClusterIdentifier:
        default: Name of DB Cluster
      SkipFinalSnapshotOnDeletion:
        default: Skip Final Snapshot On Deletion
      GlobalClusterIdentifier:
        default: Global Cluster Identifier
      GlobalPrimaryRegion:
        default: Primary Region for Global Cluster
      NumberofAuroraReplicas:
        default: Number of Aurora Replicas
      DeletionProtection:
        default: Deletion Protection
      RDSTimeZone:
        default: DB Server Timezone
      Mode:
        default: Failover Mode
      PreferredMaintenanceWindowDay:
        default: Preferred Maintenance Window Day
      PreferredMaintenanceWindowStartTime:
        default: Preferred Maintenance Window Start Time
      PreferredMaintenanceWindowEndTime:
        default: Preferred Maintenance Window End Time
      AutoMinorVersionUpgrade:
        default: Auto Minor Version Upgrade
      MonitoringInterval:
        default: Monitoring Interval
      BackupRetentionPeriod:
        default: Backup Retention Period
      StorageEncrypted:
        default: Storage Encrypted
      ServerlessMinCapacityUnit:
        default: Minimum Aurora capacity unit
      ServerlessMaxCapacityUnit:
        default: Maximum Aurora capacity unit
      ServerlessAutoPause:
        default: Pause compute capacity
      ServerlessSecondsUntilAutoPause:
        default: Pause after time of inactivity
      InboundSGName:
        default: Accessing Security Group
      VpcName:
        default: Vpc Name
      SubnetName:
        default: Subnet Name
      ArchPathTag:
        default: Cloud Resource Tagging Standard ArchPath
      EnvironmentTag:
        default: Cloud Resource Tagging Standard EnvironmentTag
      OwnerTag:
        default: Cloud Resource Tagging Standard Owner
      CostCenterTag:
        default: Cloud Resource Tagging Standard Cost Center
      DataClassificationTag:
        default: Cloud Resource Tagging Standard Data Classification Tag
      PCIDataTag:
        default: Cloud Resource Tagging Standard PCI Data Tag
      AdminRole:
        default: IAM role for admin access
      ReadRole:
        default: IAM role for read access
      SchemaRole:
        default: IAM role for schema manipulation
      ServiceRole:
        default: IAM role of the accessing service
      LambdaUpdate:
        default: Counter to trigger Lambda function update.

###############################################################################
# Parameters
###############################################################################
Parameters:

  AccessCidr:
    Description: CIDR block to allow to connect to database (Optional)
    Type: String
    Default: None

  ArchPathTag:
    Description: Cloud Resource Tagging Standard ArchPath
    Type: String

  VpcName:
    Description: The name of the VPC to launch the Memcache cluster into
    Type: String

  SubnetName:
    Description: String to match against existing subnets to place the cache
      cluster in (glob wildcards allowed).
    Type: String

  InboundSGName:
    Description: Existing Security Group name to allow access to database. Glob
      wildcards allowed. (Optional)
    Type: String
    Default: None

  DBClusterIdentifier:
    Description: Name of the DB Cluster
    Type: String

  SkipFinalSnapshotOnDeletion:
    Description: Skip Final Snapshot On Deletion
    Type: String

  AutoMinorVersionUpgrade:
    Description: Indicates that minor engine upgrades are applied automatically to
      the DB instance during the maintenance window.
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'

  BackupRetentionPeriod:
    Description: The number of days during which automatic DB snapshots are retained. Min is 1 and Max value is 35.
    Type: Number
    Default: 35
    MinValue: 1
    MaxValue: 35

  CostCenterTag:
    Description: Cloud Resource Tagging Standard Cost Center
    Type: String

  DataClassificationTag:
    Description: Cloud Resource Tagging Standard Data Classification Tag
    Type: String

  DBName:
    Description: The name of the database to create when the DB instance is created, will be autogenerated if set to "Auto".
    Type: String
    MinLength: '1'
    MaxLength: '64'
    Default: Auto
    AllowedPattern: ^(?!^mysql$)(?!^performance_schema$)(?!^information_schema$)[a-zA-Z0-9]*$
    ConstraintDescription: must contain from 1 to 64 alphanumeric characters, and not be reserved.

  DBPort:
    Description: TCP/IP Port for the Database Instance
    Type: Number
    Default: 3306
    ConstraintDescription: 'Must be in the range [1150-65535]'
    MinValue: 1150
    MaxValue: 65535

  DBUsername:
    Description: Database master username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: "^[a-zA-Z]+[0-9a-zA-Z_]*$"
    ConstraintDescription: Must start with a letter. Only numbers, letters, and _ accepted. max length 16 characters. Note 'admin' is reserved and cannot be used here.
    Default: 'master'

  DBPassword:
    Description: Master user database Password, if left at default a 32 character password will be generated
    Type: String
    Default: Auto
    NoEcho: 'True'

  DBEngineVersion:
    Description: Select Database Engine Version.
    Type: String
    Default: 'Aurora-MySQL5.6.10a'
    AllowedValues:
    - 'Aurora-MySQL5.6.10a'
    - 'Aurora-MySQL5.6-1.19.0'
    - 'Aurora-MySQL5.7.12'
    - 'Aurora-MySQL5.7-2.03.2'
    - 'Aurora-MySQL5.7-2.03.3'
    - 'Aurora-MySQL5.7-2.03.4'
    - 'Aurora-MySQL5.7-2.03.4.2'
    - 'Aurora-MySQL5.7-2.04.0'
    - 'Aurora-MySQL5.7-2.04.1'
    - 'Aurora-MySQL5.7-2.04.2'
    - 'Aurora-MySQL5.7-2.04.3'
    - 'Aurora-MySQL5.7-2.04.4'
    - 'Aurora-MySQL5.7-2.04.5'
    - 'Aurora-MySQL5.7-2.04.6'
    - 'Aurora-MySQL5.7-2.04.7'
    - 'Aurora-MySQL5.7-2.04.8'
    - 'Aurora-MySQL5.7-2.05.0'
    - 'Aurora-MySQL5.7-2.06.0'
    - 'Aurora-MySQL5.7-2.07.0'
    - 'Aurora-MySQL5.7-2.07.1'
    - 'Aurora-MySQL5.7-2.07.2'
    - 'Aurora-MySQL5.7-2.08.1'

  DBInstanceClass:
    Default: db.r4.large
    Description: Database Instance Class (Aurora MySQL supports the db.t3 instance classes for Aurora MySQL 1.15 and higher, and all Aurora MySQL 2.* versions). Not applicable if Engine Mode is Serverless.
    Type: String
    AllowedValues:
    - db.r5.12xlarge
    - db.r5.4xlarge
    - db.r5.2xlarge
    - db.r5.xlarge
    - db.r5.large
    - db.r4.16xlarge
    - db.r4.8xlarge
    - db.r4.4xlarge
    - db.r4.2xlarge
    - db.r4.xlarge
    - db.r4.large
    - db.t3.2xlarge
    - db.t3.xlarge
    - db.t3.large
    - db.t3.medium
    - db.t3.small
    - db.t3.micro
    - db.t2.medium
    - db.t2.small

  DeletionProtection:
    Description: Indicates if the DB cluster should have deletion protection enabled.
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'

  DBEngineMode:
    Description: The DB engine mode of the DB cluster, either provisioned, serverless (currently available for Aurora MySQL 5.6)
    Type: String
    Default: 'provisioned'
    AllowedValues:
    - 'provisioned'
    - 'serverless'

  EnvironmentTag:
    Description: Cloud Resource Tagging Standard EnvironmentTag
    Type: String

  AdminRole:
    Description: IAM role for admin access
    Type: String
    Default: ''

  ReadRole:
    Description: IAM role for read access
    Type: String
    Default: ''

  SchemaRole:
    Description: IAM role for schema manipulation
    Type: String
    Default: ''

  ServiceRole:
    Description: IAM role of the accessing service
    Type: String
    Default: ''

  NumberofAuroraReplicas:
    Description: Number of Aurora Replicas to deploy in addition to the Primary. Not provisioned if engine mode is Serverless.
    Type: String
    Default: '2'
    AllowedValues:
    - '0'
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
    - '10'
    - '11'
    - '12'
    - '13'
    - '14'
    - '15'

  GlobalClusterIdentifier:
    Description: Global Cluster Identifier
    Type: String
    Default: ''

  GlobalPrimaryRegion:
    Description: Primary region for global cluster.
    Type: String
    Default: ''

  MonitoringInterval:
    Description: The interval, in seconds, between points when Enhanced Monitoring
      metrics are collected for the DB instance.
    Type: String
    Default: '1'
    AllowedValues:
    - '0'
    - '1'
    - '5'
    - '10'
    - '15'
    - '30'
    - '60'

  OwnerTag:
    Description: Cloud Resource Tagging Standard Owner
    Type: String

  PCIDataTag:
    Description: Cloud Resource Tagging Standard PCI Data Tag
    Type: String

  PreferredMaintenanceWindowDay:
    Description: The day of the week which RDS maintenance will be performed
    Type: String
    Default: Sun
    AllowedValues:
    - Mon
    - Tue
    - Wed
    - Thu
    - Fri
    - Sat
    - Sun

  PreferredMaintenanceWindowEndTime:
    Description: The weekly end time in UTC for the RDS maintenance window, must be
      more than PreferredMaintenanceWindowStartTime.
    Type: String
    Default: 06:00
    AllowedValues:
    - 00:00
    - 01:00
    - 02:00
    - 03:00
    - 04:00
    - 05:00
    - 06:00
    - 07:00
    - 08:00
    - 09:00
    - '10:00'
    - '11:00'
    - '12:00'
    - '13:00'
    - '14:00'
    - '15:00'
    - '16:00'
    - '17:00'
    - '18:00'
    - '19:00'
    - '20:00'
    - '21:00'
    - '22:00'

  PreferredMaintenanceWindowStartTime:
    Description: The weekly start time in UTC for the RDS maintenance window, must
      be less than PreferredMaintenanceWindowEndTime.
    Type: String
    Default: 04:00
    AllowedValues:
    - 00:00
    - 01:00
    - 02:00
    - 03:00
    - 04:00
    - 05:00
    - 06:00
    - 07:00
    - 08:00
    - 09:00
    - '10:00'
    - '11:00'
    - '12:00'
    - '13:00'
    - '14:00'
    - '15:00'
    - '16:00'
    - '17:00'
    - '18:00'
    - '19:00'
    - '20:00'
    - '21:00'
    - '22:00'

  PubliclyAccessible:
    Description: Indicates whether the DB instance is an Internet-facing instance.
    Type: String
    Default: 'false'
    AllowedValues:
    - 'true'
    - 'false'

  RDSTimeZone:
    Description: The default timezone for the database engine to use.
    Type: String
    Default: UTC
    AllowedValues:
    - Africa/Cairo
    - Africa/Casablanca
    - Africa/Harare
    - Africa/Monrovia
    - Africa/Nairobi
    - Africa/Tripoli
    - Africa/Windhoek
    - America/Araguaina
    - America/Asuncion
    - America/Bogota
    - America/Caracas
    - America/Chihuahua
    - America/Cuiaba
    - America/Denver
    - America/Fortaleza
    - America/Guatemala
    - America/Halifax
    - America/Manaus
    - America/Matamoros
    - America/Monterrey
    - America/Montevideo
    - America/Phoenix
    - America/Santiago
    - America/Tijuana
    - Asia/Amman
    - Asia/Ashgabat
    - Asia/Baghdad
    - Asia/Baku
    - Asia/Bangkok
    - Asia/Beirut
    - Asia/Calcutta
    - Asia/Damascus
    - Asia/Dhaka
    - Asia/Irkutsk
    - Asia/Jerusalem
    - Asia/Kabul
    - Asia/Karachi
    - Asia/Kathmandu
    - Asia/Krasnoyarsk
    - Asia/Magadan
    - Asia/Muscat
    - Asia/Novosibirsk
    - Asia/Riyadh
    - Asia/Seoul
    - Asia/Shanghai
    - Asia/Singapore
    - Asia/Taipei
    - Asia/Tehran
    - Asia/Tokyo
    - Asia/Ulaanbaatar
    - Asia/Vladivostok
    - Asia/Yakutsk
    - Asia/Yerevan
    - Atlantic/Azores
    - Australia/Adelaide
    - Australia/Brisbane
    - Australia/Darwin
    - Australia/Hobart
    - Australia/Perth
    - Australia/Sydney
    - Canada/Newfoundland
    - Canada/Saskatchewan
    - Brazil/East
    - Europe/Amsterdam
    - Europe/Athens
    - Europe/Dublin
    - Europe/Helsinki
    - Europe/Istanbul
    - Europe/Kaliningrad
    - Europe/Moscow
    - Europe/Paris
    - Europe/Prague
    - Europe/Sarajevo
    - Pacific/Auckland
    - Pacific/Fiji
    - Pacific/Guam
    - Pacific/Honolulu
    - Pacific/Samoa
    - US/Alaska
    - US/Central
    - US/Eastern
    - US/East-Indiana
    - US/Pacific
    - UTC

  Mode:
    Description: Failover Mode.
    Type: String
    Default: none
    AllowedValues:
    - none
    - readonly
    - failover
    - postfailover

  StorageEncrypted:
    Description: Indicates whether the DB instance is encrypted.
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'

  ServerlessMinCapacityUnit:
    Description: The minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be less than or equal to the maximum capacity.
    Type: String
    Default: '2'
    AllowedValues:
    - '2'
    - '4'
    - '8'
    - '16'
    - '32'
    - '64'
    - '128'
    - '256'

  ServerlessMaxCapacityUnit:
    Description: The maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity.
    Type: String
    Default: '64'
    AllowedValues:
    - '2'
    - '4'
    - '8'
    - '16'
    - '32'
    - '64'
    - '128'
    - '256'

  ServerlessAutoPause:
    Description: Specifies whether to allow or disallow automatic pause for an Aurora DB cluster in serverless DB engine mode. A DB cluster can be paused only when its idle (it has no connections).
    Type: String
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'

  ServerlessSecondsUntilAutoPause:
    Description: The time, in seconds, before an Aurora DB cluster in serverless mode is auto paused. Min = 300, Max = 86400 (24hrs)
    Type: Number
    Default: 300
    MaxValue: 86400
    MinValue: 300

  LambdaUpdate:
    Description: Counter to trigger Lambda function update.
    Type: Number
    Default: 0

###############################################################################
# Mappings
###############################################################################

Mappings:

  DBFamilyMap:
    "Aurora-MySQL5.6.10a":
      "family" : "aurora5.6"
    "Aurora-MySQL5.6-1.19.0":
      "family" : "aurora5.6"
    "Aurora-MySQL5.7.12":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.03.2":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.03.3":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.03.4":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.03.4.2":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.0":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.1":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.2":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.3":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.4":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.5":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.6":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.7":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.8":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.04.9":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.05.0":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.06.0":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.07.0":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.07.1":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.07.2":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.08.0":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.08.1":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.08.2":
      "family" : "aurora-mysql5.7"
    "Aurora-MySQL5.7-2.09.0":
      "family" : "aurora-mysql5.7"

  DBEngineVersionMap:
    "Aurora-MySQL5.6.10a":
      "engineversion" : "5.6.10a"
    "Aurora-MySQL5.6-1.19.0":
      "engineversion" : "5.6.mysql_aurora.1.19.0"
    "Aurora-MySQL5.7.12":
      "engineversion" : "5.7.12"
    "Aurora-MySQL5.7-2.03.2":
      "engineversion" : "5.7.mysql_aurora.2.03.2"
    "Aurora-MySQL5.7-2.03.3":
      "engineversion" : "5.7.mysql_aurora.2.03.3"
    "Aurora-MySQL5.7-2.03.4":
      "engineversion" : "5.7.mysql_aurora.2.03.4"
    "Aurora-MySQL5.7-2.03.4.2":
      "engineversion" : "5.7.mysql_aurora.2.03.4.2"
    "Aurora-MySQL5.7-2.04.0":
      "engineversion" : "5.7.mysql_aurora.2.04.0"
    "Aurora-MySQL5.7-2.04.1":
      "engineversion" : "5.7.mysql_aurora.2.04.1"
    "Aurora-MySQL5.7-2.04.2":
      "engineversion" : "5.7.mysql_aurora.2.04.2"
    "Aurora-MySQL5.7-2.04.3":
      "engineversion" : "5.7.mysql_aurora.2.04.3"
    "Aurora-MySQL5.7-2.04.4":
      "engineversion" : "5.7.mysql_aurora.2.04.4"
    "Aurora-MySQL5.7-2.04.5":
      "engineversion" : "5.7.mysql_aurora.2.04.5"
    "Aurora-MySQL5.7-2.04.6":
      "engineversion" : "5.7.mysql_aurora.2.04.6"
    "Aurora-MySQL5.7-2.04.7":
      "engineversion" : "5.7.mysql_aurora.2.04.7"
    "Aurora-MySQL5.7-2.04.8":
      "engineversion" : "5.7.mysql_aurora.2.04.8"
    "Aurora-MySQL5.7-2.04.9":
      "engineversion" : "5.7.mysql_aurora.2.04.9"
    "Aurora-MySQL5.7-2.05.0":
      "engineversion" : "5.7.mysql_aurora.2.05.0"
    "Aurora-MySQL5.7-2.06.0":
      "engineversion" : "5.7.mysql_aurora.2.06.0"
    "Aurora-MySQL5.7-2.07.0":
      "engineversion" : "5.7.mysql_aurora.2.07.0"
    "Aurora-MySQL5.7-2.07.1":
      "engineversion" : "5.7.mysql_aurora.2.07.1"
    "Aurora-MySQL5.7-2.07.2":
      "engineversion" : "5.7.mysql_aurora.2.07.2"
    "Aurora-MySQL5.7-2.08.0":
      "engineversion" : "5.7.mysql_aurora.2.08.0"
    "Aurora-MySQL5.7-2.08.1":
      "engineversion" : "5.7.mysql_aurora.2.08.1"
    "Aurora-MySQL5.7-2.08.2":
      "engineversion" : "5.7.mysql_aurora.2.08.2"
    "Aurora-MySQL5.7-2.09.0":
      "engineversion" : "5.7.mysql_aurora.2.09.0"

  DBEngineNameMap:
    "Aurora-MySQL5.6.10a":
      "enginename" : "aurora"
    "Aurora-MySQL5.6-1.19.0":
      "enginename" : "aurora"
    "Aurora-MySQL5.7.12":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.03.2":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.03.3":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.03.4":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.03.4.2":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.04.0":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.04.1":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.04.2":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.04.3":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.04.4":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.04.5":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.04.6":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.04.7":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.04.8":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.04.9":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.05.0":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.06.0":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.07.0":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.07.1":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.07.2":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.08.0":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.08.1":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.08.2":
      "enginename" : "aurora-mysql"
    "Aurora-MySQL5.7-2.09.0":
      "enginename" : "aurora-mysql"

  DBInstanceClassMap:
    "db.r5.24xlarge":
      "memory80" : "614G"
    "db.r5.16xlarge":
      "memory80" : "410G"
    "db.r5.12xlarge":
      "memory80" : "307G"
    "db.r5.4xlarge" :
      "memory80" : "102G"
    "db.r5.2xlarge" :
      "memory80" : "51G"
    "db.r5.xlarge" :
      "memory80" : "26G"
    "db.r5.large" :
      "memory80" : "13G"
    "db.r4.16xlarge" :
      "memory80" : "390G"
    "db.r4.8xlarge" :
      "memory80" : "195G"
    "db.r4.4xlarge" :
      "memory80" : "98G"
    "db.r4.2xlarge" :
      "memory80" : "50G"
    "db.r4.xlarge" :
      "memory80" : "24G"
    "db.r4.large" :
      "memory80" : "12G"
    "db.t3.2xlarge" :
      "memory80" : "26G"
    "db.t3.xlarge" :
      "memory80" : "13G"
    "db.t3.large" :
      "memory80" : "6554M"
    "db.t3.medium" :
      "memory80" : "3277M"
    "db.t3.small" :
      "memory80" : "1638M"
    "db.t3.micro" :
      "memory80" : "819M"
    "db.t2.medium" :
      "memory80" : "3277M"
    "db.t2.small" :
      "memory80" : "1638M"


###############################################################################
# Conditions
###############################################################################
Conditions:
  EncryptionEnabled:
    !Equals
    - !Ref StorageEncrypted
    - 'true'

  ServerlessEnabled:
    !Equals
    - !Ref DBEngineMode
    - 'serverless'

  ServerlessDisabled:
    !Equals
    - !Ref DBEngineMode
    - 'provisioned'

  AutoPassword:
    !Equals
    - !Ref DBPassword
    - Auto

  AutoDBName:
    !Equals
    - !Ref DBName
    - Auto

  AdminIam:
    !Not
    - !Equals
      - AdminRole
      - ''

  ReadIam:
    !Not
    - !Equals
      - ReadRole
      - ''

  SchemaIam:
    !Not
    - !Equals
      - SchemaRole
      - ''

  IamEnabled:
    !Or
     - !Condition AdminIam
     - !Condition ReadIam

  IamNotEnabled:
    !Not
     - !Condition IamEnabled

  SGIngress:
    !Not
     - !Equals
       - !Ref InboundSGName
       - None

  CidrIngress:
    !Not
     - !Equals
       - !Ref AccessCidr
       - None

  IsPrimaryRegion:
    !Equals
      - !Ref GlobalPrimaryRegion
      - !Ref AWS::Region

  IsSecondaryRegion:
    !Not
     - !Condition IsPrimaryRegion

  ReadOnly:
    !Equals
      - !Ref Mode
      - readonly


###############################################################################
# Resources
###############################################################################

Resources:

  MonitoringIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - monitoring.rds.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole

  DBAdminUserPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: AdminIam
    Properties:
      ManagedPolicyName: !Join [ "-", [ Admin_User, !Ref ArchPathTag, !Ref GlobalClusterIdentifier, !Ref "AWS::Region"] ]
      Description: Managed Policy for admin access to service broker created Aurora MySQL database
      Path: /
      Roles:
        - !Ref AdminRole
      PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
              - rds-db:connect
            Resource:
              - !GetAtt AWSSBInjectedRDSGlobal.AdminUser

  DBSchemaUserPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: SchemaIam
    Properties:
      ManagedPolicyName: !Join [ "-", [ Schema_User, !Ref ArchPathTag, !Ref GlobalClusterIdentifier, !Ref "AWS::Region"] ]
      Description: Managed Policy for schema pipeline access to service broker created Aurora MySQL database
      Path: /
      Roles:
        - !Ref SchemaRole
      PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
              - rds-db:connect
            Resource:
              - !GetAtt AWSSBInjectedRDSGlobal.AdminUser

  DBReadUserPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: ReadIam
    Properties:
      ManagedPolicyName: !Join [ "-", [ Read_User, !Ref ArchPathTag, !Ref GlobalClusterIdentifier, !Ref "AWS::Region"] ]
      Description: Managed Policy for read access to service broker created Aurora MySQL database
      Path: /
      Roles:
        - !Ref ReadRole
      PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
              - rds-db:connect
            Resource:
              - !GetAtt AWSSBInjectedRDSGlobal.ReadUser

  DBApplicationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: IamEnabled
    Properties:
      ManagedPolicyName: !Join [ "-", [ App_User, !Ref ArchPathTag, !Ref GlobalClusterIdentifier, !Ref "AWS::Region"] ]
      Description: Managed Policy for access to service broker created Aurora MySQL database
      Path: /
      Roles:
        - !Ref ServiceRole
      PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
              - rds-db:connect
            Resource:
              - !GetAtt AWSSBInjectedRDSGlobal.ApplicationUser

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub Database ${DBName}
      SubnetIds: !GetAtt AWSSBInjectedGetSubnetIds.SubnetIDs

  ClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub Allow Client connections to Database ${DBName}
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref DBPort
          ToPort: !Ref DBPort
          SourceSecurityGroupId: !Ref LambdaSecurityGroup
          Description: Lambda SG
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      VpcId: !GetAtt AWSSBInjectedGetSubnetIds.VpcId

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for agreementretention service Lambda function
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      SecurityGroupIngress: []
      VpcId: !GetAtt AWSSBInjectedGetSubnetIds.VpcId

  ClusterSecurityGroupSelfIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt ClusterSecurityGroup.GroupId
      IpProtocol: tcp
      FromPort: !Ref DBPort
      ToPort: !Ref DBPort
      SourceSecurityGroupId: !GetAtt ClusterSecurityGroup.GroupId
      Description: Self Reference

  ClusterSecurityGroupIngress1:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: SGIngress
    Properties:
      GroupId: !GetAtt ClusterSecurityGroup.GroupId
      IpProtocol: tcp
      FromPort: !Ref DBPort
      ToPort: !Ref DBPort
      SourceSecurityGroupId: !GetAtt AWSSBInjectedGetSG.SecurityGroupId0
      Description: Named SG

  ClusterSecurityGroupIngress2:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: SGIngress
    Properties:
      GroupId: !GetAtt ClusterSecurityGroup.GroupId
      IpProtocol: tcp
      FromPort: !Ref DBPort
      ToPort: !Ref DBPort
      SourceSecurityGroupId: !GetAtt AWSSBInjectedGetSG.SecurityGroupId1
      Description: Named SG

  ClusterCidrIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: CidrIngress
    Properties:
      GroupId: !GetAtt ClusterSecurityGroup.GroupId
      IpProtocol: tcp
      FromPort: !Ref DBPort
      ToPort: !Ref DBPort
      CidrIp: !Ref AccessCidr
      Description: VPC CIDR

  ClusterSecurityGroupLambdaEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      DestinationSecurityGroupId: !GetAtt ClusterSecurityGroup.GroupId
      FromPort: !Ref DBPort
      ToPort: !Ref DBPort
      IpProtocol: tcp
      GroupId: !Ref LambdaSecurityGroup
      Description: Lambda Outbound

  RDSDBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Join [ '- ', [ 'Aurora PG Cluster Parameter Group for Cloudformation Stack ', !Ref DBName ] ]
      Family: !FindInMap [DBFamilyMap, !Ref DBEngineVersion, 'family']
      Parameters:
        net_read_timeout: 30
        connect_timeout: 10
        wait_timeout: 240
        net_write_timeout: 30
        query_cache_size: 0
        query_cache_type: 0
        thread_stack: 524288
        thread_cache_size: 16
        table_open_cache: 4096
        table_open_cache_instances: 2
        slow_query_log: 1
        long_query_time: 1
        innodb_buffer_pool_size: "{DBInstanceClassMemory*4/5}"
        innodb_lock_wait_timeout: 180
        binlog_format: MIXED
        master-info-repository: TABLE
        read_only: !If
          - ReadOnly
          - '1'
          - '0'

  AuroraKMSCMK:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    Properties:
      EnableKeyRotation: True
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
          Action: 'kms:*'
          Resource: '*'
        - Effect: Allow
          Principal:
            AWS: '*'
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:CreateGrant
          - kms:ListGrants
          - kms:DescribeKey
          Resource: '*'
          Condition:
            StringEquals:
              kms:CallerAccount: !Ref AWS::AccountId
              kms:ViaService: !Sub 'rds.${AWS::Region}.amazonaws.com'

  AuroraKMSCMKAlias:
    Type: AWS::KMS::Alias
    DeletionPolicy: Retain
    DependsOn: AWSSBInjectedGenerateDBName
    Properties:
      AliasName: !Sub 'alias/${DBClusterIdentifier}-${AWSSBInjectedGenerateDBName}'
      TargetKeyId: !Ref AuroraKMSCMK

###############################################################################
# Injected Lambdas
###############################################################################

  AWSSBInjectedLambdaZipsBucket:
    Type: AWS::S3::Bucket
    Properties:
      Tags: []
  AWSSBInjectedCopyZips:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSSBInjectedCopyZipsLambda.Arn
      DestBucket: !Ref AWSSBInjectedLambdaZipsBucket
      # Test templates arn:aws:s3:::micro-aws-servicebroker-test-templates
      SourceBucket: micro-aws-servicebroker-templates
      Prefix: ""
      # To update a function, increment the version file in the function directory and then append
      # the version both here and in the appropriate Lambda function below.
      Objects:
      - functions/generate_password/lambda_function.zip
      - functions/generate_dbname/lambda_function.zip
      - functions/get_subnet_ids/lambda_function.zip
      - functions/get_sg/lambda_function.zip
      - functions/rds_global1.4/lambda_function.zip
      - layers/requests/lambda_layer.zip
      LambdaUpdate: !Ref LambdaUpdate
  AWSSBInjectedCopyZipsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
      - PolicyName: lambda-copier
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            Resource:
            # Test templates arn:aws:s3:::micro-aws-servicebroker-test-templates
            - arn:aws:s3:::micro-aws-servicebroker-templates/*
          - Effect: Allow
            Action:
            - s3:PutObject
            - s3:DeleteObject
            Resource:
            - !Sub arn:aws:s3:::${AWSSBInjectedLambdaZipsBucket}/*
  AWSSBInjectedCopyZipsLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description: Copies objects from a source S3 bucket to a destination
      Handler: index.handler
      Runtime: python3.7
      Role: !GetAtt AWSSBInjectedCopyZipsRole.Arn
      Timeout: 240
      Code:
        ZipFile: |
          import json
          import logging
          import threading
          import boto3
          import cfnresponse


          def copy_objects(source_bucket, dest_bucket, prefix, objects):
              s3 = boto3.client('s3')
              for o in objects:
                  key = prefix + o
                  copy_source = {
                      'Bucket': source_bucket,
                      'Key': key
                  }
                  print('copy_source: %s' % copy_source)
                  print('dest_bucket = %s' % dest_bucket)
                  print('key = %s' % key)
                  s3.copy_object(CopySource=copy_source, Bucket=dest_bucket, Key=key)


          def delete_objects(bucket, prefix, objects):
              s3 = boto3.client('s3')
              objects = {'Objects': [{'Key': prefix + o} for o in objects]}
              s3.delete_objects(Bucket=bucket, Delete=objects)


          def timeout(event, context):
              logging.error('Execution is about to time out, sending failure response to CloudFormation')
              cfnresponse.send(event, context, cfnresponse.FAILED, {}, None)


          def handler(event, context):
              timer = threading.Timer((context.get_remaining_time_in_millis() / 1000.00) - 0.5, timeout, args=[event, context])
              timer.start()
              print('Received event: %s' % json.dumps(event))
              status = cfnresponse.SUCCESS
              try:
                  source_bucket = event['ResourceProperties']['SourceBucket']
                  dest_bucket = event['ResourceProperties']['DestBucket']
                  prefix = event['ResourceProperties']['Prefix']
                  objects = event['ResourceProperties']['Objects']
                  if event['RequestType'] == 'Delete':
                      delete_objects(dest_bucket, prefix, objects)
                  else:
                      copy_objects(source_bucket, dest_bucket, prefix, objects)
              except Exception as e:
                  logging.error('Exception: %s' % e, exc_info=True)
                  status = cfnresponse.FAILED
              finally:
                  timer.cancel()
                  cfnresponse.send(event, context, status, {}, None)
  AWSSBInjectedGetSubnetIdsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cfn_utility_get_subnet_ids
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:DescribeVpcs
            - ec2:DescribeSubnets
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  AWSSBInjectedGetSubnetIdsLambda:
    DependsOn: AWSSBInjectedCopyZips
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.handler
      Role:
        Fn::GetAtt:
        - AWSSBInjectedGetSubnetIdsRole
        - Arn
      Code:
        S3Bucket: !Ref AWSSBInjectedLambdaZipsBucket
        S3Key: functions/get_subnet_ids/lambda_function.zip
      Runtime: python3.8
      Timeout: '60'
      Layers:
        - !Ref AWSSBRequestsLambdaLayer
  AWSSBInjectedGetSubnetIds:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSSBInjectedGetSubnetIdsLambda.Arn
      VpcName: !Ref VpcName
      SubnetName: !Ref SubnetName
      LambdaUpdate: !Ref LambdaUpdate
  AWSSBInjectedGetSGRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cfn_utility_get_sg
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:DescribeSecurityGroups
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  AWSSBInjectedGetSGLambda:
    DependsOn: AWSSBInjectedCopyZips
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.handler
      Role:
        Fn::GetAtt:
        - AWSSBInjectedGetSGRole
        - Arn
      Code:
        S3Bucket: !Ref AWSSBInjectedLambdaZipsBucket
        S3Key: functions/get_sg/lambda_function.zip
      Runtime: python3.8
      Timeout: '60'
      Layers:
        - !Ref AWSSBRequestsLambdaLayer
  AWSSBInjectedGetSG:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSSBInjectedGetSGLambda.Arn
      SGName: !Ref InboundSGName
      LambdaUpdate: !Ref LambdaUpdate
  AWSSBInjectedGeneratePasswordRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cfn_utility_get_cidrs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  AWSSBInjectedGeneratePasswordLambda:
    DependsOn: AWSSBInjectedCopyZips
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.handler
      Role:
        Fn::GetAtt:
        - AWSSBInjectedGeneratePasswordRole
        - Arn
      Code:
        S3Bucket: !Ref AWSSBInjectedLambdaZipsBucket
        S3Key: functions/generate_password/lambda_function.zip
      Runtime: python3.8
      Timeout: '60'
      Layers:
        - !Ref AWSSBRequestsLambdaLayer
  AWSSBInjectedGeneratePassword:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSSBInjectedGeneratePasswordLambda.Arn
      Length: 32
  AWSSBInjectedGenerateDBNameRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cfn_utility_get_cidrs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
  AWSSBInjectedGenerateDBNameLambda:
    DependsOn: AWSSBInjectedCopyZips
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.handler
      Role:
        Fn::GetAtt:
        - AWSSBInjectedGenerateDBNameRole
        - Arn
      Code:
        S3Bucket: !Ref AWSSBInjectedLambdaZipsBucket
        S3Key: functions/generate_dbname/lambda_function.zip
      Runtime: python3.8
      Timeout: '60'
      Layers:
        - !Ref AWSSBRequestsLambdaLayer
  AWSSBInjectedGenerateDBName:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt AWSSBInjectedGenerateDBNameLambda.Arn
      Length: 32
  AWSSBInjectedRDSGlobalRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: cfn_utility_rds_global
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:CreateNetworkInterface
            - ec2:DescribeNetworkInterfaces
            - ec2:DeleteNetworkInterface
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - rds:*
            - iam:PassRole
            Resource: '*'
  AWSSBInjectedRDSGlobalLambda:
    DependsOn: AWSSBInjectedCopyZips
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda_function.handler
      Role:
        Fn::GetAtt:
        - AWSSBInjectedRDSGlobalRole
        - Arn
      Code:
        S3Bucket: !Ref AWSSBInjectedLambdaZipsBucket
        S3Key: functions/rds_global1.4/lambda_function.zip
      Runtime: python3.8
      Timeout: '720'
      Layers:
        - !Ref AWSSBRequestsLambdaLayer
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds: !GetAtt AWSSBInjectedGetSubnetIds.SubnetIDs
  AWSSBInjectedRDSGlobal:
    Type: Custom::RDSGlobal
    Properties:
      AvailabilityZones: !GetAtt AWSSBInjectedGetSubnetIds.AvailabilityZones
      ClusterProperties:
        BackupRetentionPeriod: !Ref BackupRetentionPeriod
        DBClusterIdentifier: !Ref DBClusterIdentifier
        DBClusterParameterGroupName: !Ref RDSDBClusterParameterGroup
        DBSubnetGroupName: !Ref DBSubnetGroup
        Engine:  !FindInMap [DBEngineNameMap, !Ref DBEngineVersion, enginename]
        EngineVersion: !FindInMap [DBEngineVersionMap, !Ref DBEngineVersion, engineversion]
        EngineMode: !Ref DBEngineMode
        EnableIAMDatabaseAuthentication: !If [IamEnabled, 'true', 'false']
        DatabaseName: !If
          - IsPrimaryRegion
          - !If
            - AutoDBName
            - !GetAtt AWSSBInjectedGenerateDBName.DBName
            - !Ref DBName
          - !Ref AWS::NoValue
        GlobalClusterIdentifier: !Ref GlobalClusterIdentifier
        KmsKeyId:  !If
          - EncryptionEnabled
          - !GetAtt AuroraKMSCMK.Arn
          - !Ref AWS::NoValue
        MasterUsername: !If
          - IsPrimaryRegion
          - !Ref DBUsername
          - !Ref AWS::NoValue
        MasterUserPassword: !If
          - IsPrimaryRegion
          - !If
            - AutoPassword
            - !GetAtt AWSSBInjectedGeneratePassword.MasterUserPassword
            - !Ref DBPassword
          - !Ref AWS::NoValue
        Port: !Ref DBPort
        PreferredMaintenanceWindow: !Sub ${PreferredMaintenanceWindowDay}:${PreferredMaintenanceWindowStartTime}-${PreferredMaintenanceWindowDay}:${PreferredMaintenanceWindowEndTime}
        ScalingConfiguration:  !If
          - ServerlessEnabled
          - AutoPause: !Ref ServerlessAutoPause
            MaxCapacity: !Ref ServerlessMaxCapacityUnit
            MinCapacity: !Ref ServerlessMinCapacityUnit
            SecondsUntilAutoPause: !Ref ServerlessSecondsUntilAutoPause
          - !Ref AWS::NoValue
        SkipFinalSnapshotOnDeletion: !Ref SkipFinalSnapshotOnDeletion
        StorageEncrypted: !Ref StorageEncrypted
        Tags:
          - Key: Adobe.ArchPath
            Value: !Ref ArchPathTag
          - Key: Adobe.Environment
            Value: !Ref EnvironmentTag
          - Key: Adobe.Owner
            Value: !Ref OwnerTag
          - Key: Adobe.CostCenter
            Value: !Ref CostCenterTag
          - Key: Adobe.DataClassification
            Value: !Ref DataClassificationTag
          - Key: Adobe.PCIData
            Value: !Ref PCIDataTag
        VpcSecurityGroupIds:
        - !Ref ClusterSecurityGroup
      GlobalProperties:
        DeletionProtection: !Ref DeletionProtection
        Engine:  !FindInMap [DBEngineNameMap, !Ref DBEngineVersion, enginename]
        EngineVersion: !FindInMap [DBEngineVersionMap, !Ref DBEngineVersion, engineversion]
        GlobalClusterIdentifier: !Ref GlobalClusterIdentifier
        StorageEncrypted: !Ref StorageEncrypted
      InstanceProperties:
        AutoMinorVersionUpgrade: !Ref AutoMinorVersionUpgrade
        DBClusterIdentifier: !Ref DBClusterIdentifier
        DBInstanceClass: !Ref DBInstanceClass
        DBSubnetGroupName: !Ref DBSubnetGroup
        Engine:  !FindInMap [DBEngineNameMap, !Ref DBEngineVersion, enginename]
        MonitoringInterval: !Ref MonitoringInterval
        MonitoringRoleArn: !GetAtt MonitoringIAMRole.Arn
        PubliclyAccessible: !Ref PubliclyAccessible
        #Availability zone calculated from InjectedGetSubnetIds
        Tags:
          - Key: Adobe.ArchPath
            Value: !Ref ArchPathTag
          - Key: Adobe.Environment
            Value: !Ref EnvironmentTag
          - Key: Adobe.Owner
            Value: !Ref OwnerTag
          - Key: Adobe.CostCenter
            Value: !Ref CostCenterTag
          - Key: Adobe.DataClassification
            Value: !Ref DataClassificationTag
          - Key: Adobe.PCIData
            Value: !Ref PCIDataTag
      Mode: !Ref Mode
      Replicas: !Ref NumberofAuroraReplicas
      SourceRegion: !Ref GlobalPrimaryRegion
      ServiceToken: !GetAtt AWSSBInjectedRDSGlobalLambda.Arn
      LambdaUpdate: !Ref LambdaUpdate

  AWSSBRequestsLambdaLayer:
    DependsOn: AWSSBInjectedCopyZips
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.8
      Content:
        S3Bucket: !Ref AWSSBInjectedLambdaZipsBucket
        S3Key: layers/requests/lambda_layer.zip
      Description: Contains requests and cfnresponse.send()
      LayerName: requests
      LicenseInfo: Apache License v2.0, AWS Customer Agreement

###############################################################################
# Outputs
###############################################################################
Outputs:
  ClusterEndpoint:
    Description: Aurora Cluster/Writer Endpoint
    Value: !GetAtt AWSSBInjectedRDSGlobal.Endpoint
  ReaderEndpoint:
    Condition: ServerlessDisabled
    Description: Aurora Reader Endpoint
    Value: !GetAtt AWSSBInjectedRDSGlobal.ReadEndpoint
  Port:
    Description: Aurora Endpoint Port
    Value: !Ref DBPort
  DBUsername:
    Description: Database master username
    Value: !Ref DBUsername
  DBPassword:
    Condition: IamNotEnabled
    Value:
      !If
      - AutoPassword
      - !GetAtt AWSSBInjectedGeneratePassword.MasterUserPassword
      - !Ref DBPassword
  DBName:
    Value:
      !If
      - AutoDBName
      - !GetAtt AWSSBInjectedGenerateDBName.DBName
      - !Ref DBName
  AdminIamUser:
    Description: Admin User Arn
    Condition: IamEnabled
    Value: !GetAtt AWSSBInjectedRDSGlobal.AdminUser
  AppIamUser:
    Description: Application User Arn
    Condition: AdminIam
    Value: !GetAtt AWSSBInjectedRDSGlobal.ApplicationUser
  ReadIamUser:
    Description: Read User Arn
    Condition: ReadIam
    Value: !GetAtt AWSSBInjectedRDSGlobal.ReadUser
